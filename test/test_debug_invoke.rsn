import rscene.std;
import rscene.debug;

import test_tool;

namespace test_debug_invoke
{
    func fib(var val:int)
    {
        if (val <= 2)
            return 1;
        return fib(val-1) + fib(val-2);
    }
    func variadic_func_call(...)
    {
        return std::println(......);
    }
    func cause_minor_fail()
    {
        std::debug::breakpoint();
    }
    func swap(ref a, ref b)
    {
        var c = b;
        b = a;
        a = c;
    }

    func main()
    {
        test_equal(fib(10), std::debug::invoke(fib, 10));
        
        std::debug::invoke(cause_minor_fail);

        var i = 0:dynamic;
        while (i<10)
        {
            test_equal(variadic_func_call("h", "e", "l", "l", "o", "w", "o", "r", "l", "d"),
                            std::debug::invoke(variadic_func_call, "h", "e", "l", "l", "o", "w", "o", "r", "l", "d"));
            test_equal(std::print("h", "e", "l", "l", "o", "w", "o", "r", "l", "d", "\n"),
                            std::debug::invoke(std::print, "h", "e", "l", "l", "o", "w", "o", "r", "l", "d", "\n"));
            i +=1;
        }

        swap(ref i, 233);
        test_equal(i, 233);

        std::debug::invoke(swap, ref i, 123);
        test_equal(i, 123);
    }
}

test_function("test_debug_invoke.main", test_debug_invoke::main);