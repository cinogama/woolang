/*                                       */
import test_tool;

import test_helloworld;
import test_string_u8;
import test_while;
import test_debug_invoke;
import test_gc;
import test_template;
import test_dup;
import test_static;
import test_enum;
import test_vm;
import test_thread;
/*                                       */
///////////////////////////////////////////
/*	TODO-LIST
 *  define function & type (maybe value have same problem) with same name may cause crash.
 *  32-bit machine equb may useless, now make sure full writing HANDLE(8B) with nullptr. need test. 
 */
///////////////////////////////////////////

using HelloworldSpeaker
{
	func speak(var self: HelloworldSpeaker)
	{	
		std::println("Helloworld");
	}
}

typeof(HelloworldSpeaker())::create()->speak();

using range
{
	var current = 0;
	var aim = 0;
	var step = 0;

	func create(var from:int, var to:int)
	{
		var self = new();
		self.current = from;
		self.aim = to;

		if (from <= to)
			self.step = 1;
		else
			self.step = -1;

		return self;
	}

	func iter(var self:range)
	{
		return self;
	}

	func next(var self:range, ref step:int)
	{
		if (self.step > 0 && self.current > self.aim)
			return false;
		if (self.step < 0 && self.current < self.aim)
			return false;

		step = self.current;
		self.current += self.step;

		return true;
	}

}

func main()
{
	var m ={
		{"name", "joy"},
		{"age",  "19"},
	};

	m["xx"] = "Test";

	for(var key, val : m)
		std::println(nil, "\t:", val);

	while(true);
}

main();


///////////////////////////////////////////
/*                                       */
std::println("Unit-test begin!");
execute_all_test();
/*                                       */