import rscene.std;
import test_tool;

namespace test_template
{
    func invokable<T>(var foo:T(T), var n:T)
    {
        return foo(n);
    }
    func fib<T>(var n:T)
    {
        if (n <= 2)
            return 1:T;
        return fib:<T>(n-1) + fib:<T>(n-2);
    }
    func diff_static<T>()
    {
        static var a = []:array<T>;
        return a;
    }

    func main()
    {
        test_equal(fib:<int>, fib:<int>);
        test_equal(fib:<int> == fib:<real>, false);

        test_equal(fib:<int> is int(int), true);
        test_equal(fib:<real> is real(real), true);

        test_equal(diff_static:<int>() is array<int>, true);
        test_equal(diff_static:<real>() is array<real>, true);
        test_equal(diff_static:<real>() == diff_static:<int>(), false);

        var result = invokable:<int>(fib:<int>, 10);

        test_equal(result, 55);
    }
}

test_function("test_template.main", test_template::main);